name: Development(android/ios) AppDistribution

on:
  push:
    branches:
      - production_  # Change this to your deployment branch
  workflow_dispatch:

jobs:
  deploy_ios:
    name: Build & Upload iOS to TestFlight
    runs-on: macos-latest  # Required for iOS builds

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Ruby & Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true

      - name: Install Bundler
        run: |
          gem install bundler

      - name: Install Dependencies via Bundler
        run: |
          cd ios
          bundle install

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.4"
          channel: 'stable'
          cache: true

      - name: Get Packages
        run: |
          flutter clean
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          cd ios
          rm Podfile.lock
          pod install 

      - name: Print environment variables
        run: |
          echo "APPLE_KEY_CONTENT=${{ secrets.APPLE_KEY_CONTENT }}"
          echo "APPLE_KEY_ID=${{ secrets.APPLE_KEY_ID }}"
          echo "TEMP_KEYCHAIN_PASSWORD=${{ secrets.TEMP_KEYCHAIN_PASSWORD }}"
          echo "APPLE_ISSUER_ID=${{ secrets.APPLE_ISSUER_ID }}"
          echo "APP_IDENTIFIER=${{ secrets.APP_IDENTIFIER }}"
          echo "TEMP_KEYCHAIN_USER=${{ secrets.TEMP_KEYCHAIN_USER }}"
          echo "FASTLANE_USER=${{ secrets.FASTLANE_APPLE_ID }}"
          echo "MATCH_PASSWORD=${{ secrets.MATCH_PASSWORD }}"
          echo "FASTLANE_VERBOSE=${{ secrets.FASTLANE_VERBOSE }}"


      - name: Build & Upload Firebase
        env:
          APPLE_KEY_CONTENT: ${{ secrets.APPLE_KEY_CONTENT }}
          APPLE_KEY_ID: ${{ secrets.APPLE_KEY_ID }}
          TEMP_KEYCHAIN_PASSWORD: ${{ secrets.TEMP_KEYCHAIN_PASSWORD }}
          APPLE_ISSUER_ID: ${{ secrets.APPLE_ISSUER_ID }}
          APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
          TEMP_KEYCHAIN_USER: ${{ secrets.TEMP_KEYCHAIN_USER }}
          FASTLANE_USER: ${{ secrets.FASTLANE_APPLE_ID }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FASTLANE_VERBOSE: true


        run: |
          cd ios
          fastlane match adhoc --readonly
          fastlane ios firebase_beta --verbose

  deploy_android:
    name: Build & Upload Android to Firebase
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.4"
          channel: 'stable'
          cache: true

      - name: Create local.properties
        run: |
          echo "sdk.dir=${HOME}/Android/Sdk" > android/local.properties
          echo "flutter.sdk=${GITHUB_WORKSPACE}/flutter" >> android/local.properties
          echo "flutter.buildMode=debug" >> android/local.properties
          echo "flutter.versionName=1.0.0" >> android/local.properties
          echo "flutter.versionCode=1" >> android/local.properties

      - name: Install Dependencies
        run: |
          flutter clean   
          flutter pub upgrade  
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby-full
          gem install bundler --user-install
          gem install fastlane -NV --user-install
          gem install fastlane-plugin-firebase_app_distribution --user-install
          sudo npm install -g firebase-tools

      - name: Run Fastlane Deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          cd android
          fastlane android deploy
